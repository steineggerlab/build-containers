name: Create and publish Docker images

on:
  push:
    branches:
      - "main"
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        required: true
        type: string
        description: "Docker tag"
      latest:
        default: false
        type: boolean
        description: "Mark as latest"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-gpu-builder:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - suffix: x86_64
            dockerfile: Dockerfile.GPU-manylinux2014
          - suffix: sbsa
            dockerfile: Dockerfile.GPU-buster-cross-sbsa
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            suffix=-${{ matrix.suffix }},onlatest=true

      - name: Tag for workflow_dispatch
        id: dispatch_tag
        run: |
          if [ -n "$TAG" ]; then
            echo "tag=$FULL_TAG" >> $GITHUB_OUTPUT
          fi
          if [ "$LATEST" = "true" ]; then
            echo "latest=$LATEST_TAG" >> $GITHUB_OUTPUT
          fi
        env:
          FULL_TAG: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.tag }}
          LATEST_TAG: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          TAG: ${{ github.event.inputs.tag }}
          LATEST: ${{ github.event.inputs.latest }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64
          push: true
          build-args: |
            GPU=1
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ steps.dispatch_tag.outputs.tag }}
            ${{ steps.dispatch_tag.outputs.latest }}
          labels: ${{ steps.meta.outputs.labels }}
